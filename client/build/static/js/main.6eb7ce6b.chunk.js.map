{"version":3,"sources":["reducers/forms.js","reducers/user.js","reducers/application.js","reducers/expAlpha.js","reducers/expBeta.js","reducers/index.js","reducers/test.js","actions/types.js","actions/user_actions.js","actions/forms_actions.js","actions/modals_actions.js","actions/roomSelector_actions.js","actions/expAlpha_actions.js","actions/expBeta_actions.js","components/NewAccountModal.js","components/Login.js","components/Portal.js","components/expAlpha/HelpModal.js","components/expAlpha/EndRoundModal.js","components/expAlpha/wordViewer.js","components/expAlpha/CacheWordViewer.js","components/expAlpha/ExpMain.js","components/expBeta/WordsInterface.js","components/expBeta/ExpMain.js","components/Main.js","index.js"],"names":["defaultValues","login","rut","password","err","newAccount","name","surname","newRut","mail","age","newPassword","newPasswordVer","gender","interest","surnameSignature","roomSelector","room","expA","mainInput","token","userID","userLogIn","activeExpId","expPublicId","modals","parameters","instructions","testId","wordId","actualWord","wordInputList","roundsComplete","roundId","wordOfRoundCount","alphaExpIdSource","extremesWords","combineReducers","test","state","arguments","length","undefined","action","type","payload","forms","update","Object","defineProperty","formId","inputId","$set","text","user","application","modalId","_id","expAlpha","word","$push","slice","reduceIn","$apply","cacheWords","_","map","value","key","time","expBeta","loginUser","credentials","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","decodeToken","wrap","_context","prev","next","getToken","axios","post","sent","jwtDecode","data","id","abrupt","t0","stop","this","_x","apply","createNewUser","userData","_ref2","_callee2","formatRut","_context2","rutTrimed","trim","valor","replace","toUpperCase","toLowerCase","_x2","userLogOut","formInput","formError","formClear","modalControl","roomSelect","headers","authorization","console","log","loadUserTest","loadNewWord","initRound","_ref3","_callee3","_context3","_x3","addToWordList","Promise","resolve","reject","sendWordList","_ref4","_callee4","_context4","wordList","_x4","endRound","_ref5","_callee5","_context5","_x5","addRoundWordCount","sendPauseEvent","_ref6","_callee6","_context6","_x6","editWordInCache","loadUserTestBeta","loadExpBetaWords","response","sendRelationWords","alphaExpSource","roomBetaNumber","NewAccountModal","nameInputClassName","surnameInputClassName","newRutInputClassName","mailInputClassName","ageInputClassName","newPasswordInputClassName","newPasswordVerInputClassName","surnameSignatureInputClassName","step","showProgressBar","initializeSelect","$","material_select","props","setState","val","radioButtonId","formData","errStateVarName","maxLength","minLength","trimedFormData","options","selectedOptions","selected","i","push","email","emailTrimed","cuerpo","dv","suma","multiplo","charAt","passwordVer","errorInValidateExistenceAndLength","passwordTrimed","passwordVerTrimed","min","max","allOK","readSaveAndValidateSelect","validateRadioButton","validateExistenceAndLength","validateAgeRange","validateRut","validateEmail","validatePassword","react_default","createElement","className","signature","signatureTrimed","surnameTrimed","validateSignatue","onCloseModal","_this2","style","marginTop","onClick","processNewUser","_this3","onChange","onChangeInput","htmlFor","onChangeRadioButton","marginRight","defaultValue","multiple","disabled","renderErr","onClickNext","placeholder","renderProsgressBar","_this4","react_responsive_modal_lib_default","open","modalState","showCloseIcon","closeOnOverlayClick","closeOnEsc","onClose","renderContent","Component","connect","actions","Login","rutInputClassName","passwordInputClassName","formatAndValidateRut","onClickLogin","input","react_router_dom_es","to","components_NewAccountModal","fontSize","backgroundColor","autoFocus","onKeyPress","handleKeyPress","ref","rutInput","Portal","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","roomInputClassName","_isMounted","onClickEnterRoom","roomInput","HelpModal","page","onClickNextButton","buttonText","content","loadingMode","renderProgressBar","rederNextButton","renderButton","isOpen","onExited","defaultProps","instructionsText","EndRoundModal","option","showNextRoundButton","showEndExpButton","whith","wordViewer","fixWordInput","React","createRef","editMode","wordTime","newProps","current","focus","onClickEnd","onClickCorrect","marginBottom","fontWeight","paddingTop","renderWord","CacheWordViewer","reverse","wordObj","index","expAlpha_wordViewer","renderWords","ExpMain","wordInput","showHelpModal","loadingModeHelpModal","textButtonHelpModal","timeInitPause","fristRound","showEndRoundModal","showNextRoundButtonEndRoundModal","showEndExpButtonEndRoundModal","errorOnTest","enterKeyLocked","nextWordButtonClass","displayCacheWordViewer","initialLoad","nextProps","nextState","prevProps","prevState","experimentId","timeEndPause","Date","timeInit","toISOString","timeEnd","inputValidate","RegExp","solicedWordList","mainWordId","endExp","expAlpha_CacheWordViewer","expAlpha_HelpModal","onCloseHelpModal","expAlpha_EndRoundModal","onCloseEndRoundModal","onClickNextRound","onClickHelpButton","display","renderCacheWordViewer","defaultChecked","obj","checkboxCacheWordViewer","target","checked","WordsInterface","inputClassName","lockButton","relations","processString","inputString","initWord","endWord","wordsArray","conectionArray","output","split","wordIndex","charIndex","createRelation","wordFrom","wordTo","relation","onClickReady","ExpMainBeta","loadTest","loadWords","expBeta_WordsInterface","Main","exact","path","component","AlphaExpMain","BetaExpMain","store","createStore","reducers","compose","applyMiddleware","reduxThunk","window","devToolsExtension","f","ReactDOM","render","es","components_Main","document","querySelector"],"mappings":"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","file":"static/js/main.6eb7ce6b.chunk.js","sourcesContent":["  import { FORM_INPUT, FORM_ERR, FORM_CLEAR, USER_LOG_OUT } from '../actions/types';\r\nimport update from 'react-addons-update';\r\n\r\n\r\n//TODO: Actualizar el modelo para incluir un error por cada input\r\nvar defaultValues = {\r\n  login: {\r\n    rut: '',\r\n    password: '',\r\n    err: ''\r\n  },\r\n  newAccount: {\r\n    name: '',\r\n    surname: '',\r\n    newRut: '',\r\n    mail: '',\r\n    age: '',\r\n    newPassword: '',\r\n    newPasswordVer: '',\r\n    gender:'',\r\n    interest: [],\r\n    surnameSignature: '',\r\n    err: ''\r\n  },\r\n  roomSelector: {\r\n    room: '',\r\n    err:''\r\n  },\r\n  expA: {\r\n    mainInput: '',\r\n    err: ''\r\n  }\r\n}\r\n\r\nexport default function(state = defaultValues, action) {\r\n  var newState;\r\n  switch (action.type){\r\n    case FORM_INPUT:\r\n      newState = update(state, {[action.payload.formId]: { [action.payload.inputId]: {$set: action.payload.text}}});\r\n      return newState;\r\n    case FORM_ERR:\r\n      newState = update(state, {[action.payload.formId]: { 'err': {$set: action.payload.err}}});\r\n      return newState;\r\n    case FORM_CLEAR:\r\n      newState = update(state, {[action.payload.formId]: {$set: defaultValues[action.payload.formId]}});\r\n      return newState;\r\n    case USER_LOG_OUT:\r\n      newState = update(state, {$set: defaultValues});\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { LOAD_TOKEN, LOAD_USERID, USER_LOG_OUT } from '../actions/types';\r\nimport update from 'react-addons-update';\r\n\r\nvar defaultValues = {\r\n  token: '',\r\n  userID: ''\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  var newState;\r\n  switch (action.type){\r\n    case LOAD_TOKEN:\r\n      newState = update(state, {token: {$set: action.payload}});\r\n      return newState;\r\n    case LOAD_USERID:\r\n      newState = update(state, {userID: {$set: action.payload}});\r\n      return newState;\r\n    case USER_LOG_OUT:\r\n      newState = update(state, {$set: defaultValues});\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { LOAD_TOKEN, MODAL_CONTROL, EXP_LOAD, USER_LOG_OUT } from '../actions/types';\r\nimport update from 'react-addons-update';\r\n\r\nvar defaultValues = {\r\n  userLogIn: false,\r\n  activeExpId: '',\r\n  expPublicId: 0,\r\n  modals:{\r\n    newAccount: false,\r\n  }\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  var newState;\r\n  switch (action.type){\r\n    case LOAD_TOKEN:\r\n      newState = update(state, {userLogIn: {$set: true}});\r\n      return newState;\r\n    case MODAL_CONTROL:\r\n      newState = update(state, {modals: { [action.payload.modalId]: {$set: action.payload.state}}});\r\n      return newState;\r\n    case EXP_LOAD:\r\n      newState = update(state, {activeExpId: {$set: action.payload._id}, expPublicId: {$set: action.payload.expPublicId}});\r\n      return newState;\r\n    case USER_LOG_OUT:\r\n      newState = update(state, {$set: defaultValues});\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  EXP_LOAD_ALPHA,\r\n  EXP_A_LOAD_TEST,\r\n  EXP_A_LOAD_WORD,\r\n  EXP_A_ADD_WORD_LIST,\r\n  EXP_A_LOAD_ROUND,\r\n  EXP_A_CLEAR_WORD_LIST,\r\n  EXP_A_REDUCE_WORD_LIST,\r\n  EXP_A_ADD_ROUND_READY,\r\n  EXP_A_ADD_ROUND_WORD_COUNT,\r\n  EXP_A_EDIT_WORD_IN_CACHE,\r\n  USER_LOG_OUT\r\n} from '../actions/types';\r\nimport _ from 'lodash';\r\nimport update from 'react-addons-update';\r\n\r\nvar defaultValues = {\r\n  parameters: {           //Parametros del experimento\r\n    instructions: ''\r\n  },\r\n  testId: '',             //id del test\r\n  wordId: '',             //id de la palabra raiz de la ronda\r\n  actualWord: '',         //palabra raiz de la ronda\r\n  wordInputList: [],      //cache de palabras de una ronda (Se envia y vacia si llega a 10)\r\n  roundsComplete: 0,      //contador de rondas completadas\r\n  roundId: '',            //id de la ronda\r\n  wordOfRoundCount: 0     //contador de palabras de la ronda actual\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  var newState;\r\n  switch (action.type){\r\n    case EXP_LOAD_ALPHA:\r\n      newState = update(state, {parameters: {$set: action.payload.parameters}});\r\n      return newState;\r\n    case EXP_A_LOAD_TEST:\r\n      newState = update(state, {testId: {$set: action.payload }});\r\n      return newState;\r\n    case EXP_A_LOAD_WORD:\r\n      newState = update(state, {actualWord: {$set: action.payload.word}, wordId: {$set: action.payload._id} });\r\n      return newState;\r\n    case EXP_A_ADD_WORD_LIST:\r\n      newState = update(state, {wordInputList: {$push: [action.payload] }});\r\n      return newState;\r\n    case EXP_A_LOAD_ROUND:\r\n      newState = update(state, {roundId: {$set: action.payload }});\r\n      return newState;\r\n    case EXP_A_CLEAR_WORD_LIST:\r\n      newState = update(state, {wordInputList: {$set: [] }});\r\n      return newState;\r\n    case EXP_A_REDUCE_WORD_LIST:\r\n      newState = update(state, {wordInputList: {$set: state.wordInputList.slice(action.payload.reduceIn) }});\r\n      return newState;\r\n    case EXP_A_ADD_ROUND_READY:\r\n      newState = update(state, {roundsComplete: {$set: state.roundsComplete + 1 }, wordOfRoundCount: {$set:0} });\r\n      return newState;\r\n    case EXP_A_ADD_ROUND_WORD_COUNT:\r\n      newState = update(state, {wordOfRoundCount: {$set: state.wordOfRoundCount + 1 }});\r\n      return newState;\r\n    case EXP_A_EDIT_WORD_IN_CACHE:\r\n      //Aplica una funcion especifica a un objeto\r\n      newState = update(state, {wordInputList: {$apply: (cacheWords) => {\r\n        //por cada objeto en el cache\r\n        return _.map(cacheWords, (value, key) => {\r\n          //busca una donde el tiempo sea igual (el tiempo lo ocupamos como key)\r\n          if(value.time === action.payload.time){\r\n            //Retorna los datos editados\r\n            return {word: action.payload.word, time: value.time};\r\n          }else{\r\n            //retorna los datos sin editar\r\n            return value;\r\n          }\r\n        });\r\n      }}});\r\n      return newState;\r\n    case USER_LOG_OUT:\r\n      newState = update(state, {$set: defaultValues});\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  EXP_LOAD_BETA,\r\n  EXP_B_LOAD_TEST,\r\n  EXP_B_EXTREMES_WORDS,\r\n  EXP_B_OUTOFWORDS,\r\n} from '../actions/types';\r\nimport _ from 'lodash';\r\nimport update from 'react-addons-update';\r\n\r\nvar defaultValues = {\r\n  parameters: {                 //Parametros del experimento\r\n    alphaExpIdSource: ''        //id del experimento alpha de donde vienen los datos\r\n  },\r\n  testId: '',                   //id del test\r\n  extremesWords: [],            //palabras extremas que se tiene que unir\r\n  err: ''\r\n}\r\n\r\nexport default function(state = defaultValues , action) {\r\n  var newState;\r\n  switch (action.type){\r\n    case EXP_LOAD_BETA:\r\n      newState = update(state, {parameters: {$set: action.payload.parameters}});\r\n      return newState;\r\n    case EXP_B_LOAD_TEST:\r\n      newState = update(state, {testId: {$set: action.payload.testId } });\r\n      return newState;\r\n    case EXP_B_EXTREMES_WORDS:\r\n      newState = update(state, {extremesWords: {$set: action.payload.extremesWords} });\r\n      return newState;\r\n    case EXP_B_OUTOFWORDS:\r\n      newState = update(state, {err: {$set: \"outofwords\"} });\r\n      return newState;\r\n    default:\r\n      return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport test from './test';\r\nimport forms from './forms';\r\nimport user from './user';\r\nimport application from './application';\r\nimport expAlpha from './expAlpha';\r\nimport expBeta from './expBeta';\r\n\r\nexport default combineReducers({\r\n  test: test,\r\n  forms: forms,\r\n  user: user,\r\n  application: application,\r\n  expAlpha: expAlpha,\r\n  expBeta: expBeta\r\n});\r\n","import { TEST } from '../actions/types';\r\n\r\nexport default function(state = 0 , action) {\r\n  switch (action.type){\r\n    case TEST:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const TEST = 'test';\r\nexport const FORM_INPUT = 'formInput';\r\nexport const FORM_ERR = 'formErr';\r\nexport const LOAD_TOKEN = 'loadToken';\r\nexport const LOAD_USERID = 'loadUserID';\r\nexport const MODAL_CONTROL = 'modalCOntrol';\r\nexport const FORM_CLEAR = 'formClear';\r\nexport const EXP_LOAD = 'expLoad';\r\nexport const EXP_LOAD_ALPHA = 'expLoadAlpha';\r\nexport const EXP_A_LOAD_TEST = 'expALoadTest';\r\nexport const EXP_A_LOAD_WORD = 'expALoadWord';\r\nexport const EXP_A_ADD_WORD_LIST = 'expAAddWordList';\r\nexport const EXP_A_LOAD_ROUND = 'expaloadround';\r\nexport const EXP_A_CLEAR_WORD_LIST = 'expaclearwordlist';\r\nexport const EXP_A_REDUCE_WORD_LIST = 'expareducewordlist';\r\nexport const EXP_A_ADD_ROUND_READY = 'expaaddroundready';\r\nexport const EXP_A_ADD_ROUND_WORD_COUNT = 'expaaddroundwordcount';\r\nexport const EXP_A_EDIT_WORD_IN_CACHE = 'expaeditwordincache';\r\nexport const USER_LOG_OUT = 'userLogOut';\r\nexport const EXP_LOAD_BETA = 'expLoadBeta';\r\nexport const EXP_B_LOAD_TEST='expBloadTest';\r\nexport const EXP_B_EXTREMES_WORDS='expBExtremesWords';\r\nexport const EXP_B_OUTOFWORDS='expBOutofwords';\r\n","import axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport {\r\n  LOAD_TOKEN,\r\n  FORM_ERR,\r\n  LOAD_USERID,\r\n  USER_LOG_OUT\r\n} from './types';\r\n\r\nexport const loginUser = (credentials) => async (dispatch) => {\r\n\r\n  credentials.getToken = true;\r\n\r\n  try {\r\n    const res = await axios.post('/api/loginUser', credentials);\r\n    const decodeToken = jwtDecode(res.data.token);\r\n    dispatch({ type: LOAD_TOKEN, payload: res.data.token });\r\n    dispatch({ type: LOAD_USERID, payload: decodeToken.id});\r\n    return true;\r\n  } catch (err) {\r\n    dispatch({ type: FORM_ERR, payload: {formId:'login', err:'Error en el login'}});\r\n    return false;\r\n  }\r\n\r\n};\r\n\r\nexport const createNewUser = (userData) => async (dispatch) => {\r\n\r\n  function formatRut(rut){\r\n    var rutTrimed = rut.trim();\r\n    var valor = rutTrimed.replace(/\\./g,'');\r\n    valor = valor.replace('-','');\r\n    var cuerpo = valor.slice(0,-1);\r\n    var dv = valor.slice(-1).toUpperCase();\r\n    rutTrimed = cuerpo + '-'+ dv\r\n    return rutTrimed;\r\n  }\r\n\r\n  const data = {\r\n    name: userData.name.trim().toLowerCase(),\r\n    surname: userData.surname.trim().toLowerCase(),\r\n    rut: formatRut(userData.newRut),\r\n    mail: userData.mail.trim(),\r\n    age: userData.age.trim(),\r\n    password: userData.newPassword.trim(),\r\n    gender: userData.gender,\r\n    interest: userData.interest\r\n  };\r\n\r\n  try {\r\n    await axios.post('/api/createUser', data);\r\n    return true;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const userLogOut = () => dispatch => {\r\n  dispatch({ type: USER_LOG_OUT, payload: {}});\r\n}\r\n","import {\r\n  FORM_INPUT,\r\n  FORM_ERR,\r\n  FORM_CLEAR\r\n} from './types';\r\n\r\nexport const formInput = (data) => dispatch => {\r\n  dispatch({ type: FORM_INPUT, payload: data});\r\n};\r\n\r\nexport const formError = (data) => dispatch => {\r\n  dispatch({ type: FORM_ERR, payload: data});\r\n};\r\n\r\nexport const formClear = (data) => dispatch => {\r\n  dispatch({ type: FORM_CLEAR, payload: data});\r\n}\r\n","import {\r\n   MODAL_CONTROL\r\n} from './types';\r\n\r\nexport const modalControl = (data) => dispatch => {\r\n  dispatch({ type: MODAL_CONTROL, payload: data});\r\n};\r\n","import axios from 'axios';\r\n\r\nimport {\r\n   EXP_LOAD,\r\n   EXP_LOAD_ALPHA,\r\n   EXP_LOAD_BETA\r\n} from './types';\r\n\r\nexport const roomSelect = (data, token) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/api/loadRoom', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    dispatch({ type: EXP_LOAD, payload: res.data});\r\n    if(res.data.expPublicId === 1){\r\n      dispatch({ type: EXP_LOAD_ALPHA, payload: res.data});\r\n      return true;\r\n    }\r\n    if(res.data.expPublicId === 2){\r\n      dispatch({ type: EXP_LOAD_BETA, payload: res.data});\r\n      return true;\r\n    } else{\r\n      console.log('Es un tipo de experimento que aun no tiene interfaz de usuario');\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  EXP_A_LOAD_TEST,\r\n  EXP_A_LOAD_WORD,\r\n  EXP_A_ADD_WORD_LIST,\r\n  EXP_A_LOAD_ROUND,\r\n  EXP_A_CLEAR_WORD_LIST,\r\n  EXP_A_REDUCE_WORD_LIST,\r\n  EXP_A_ADD_ROUND_READY,\r\n  EXP_A_EDIT_WORD_IN_CACHE,\r\n  EXP_A_ADD_ROUND_WORD_COUNT\r\n} from './types';\r\n\r\nexport const loadUserTest = (data, token) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/loadUserTest', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    dispatch({ type: EXP_A_LOAD_TEST, payload: res.data._id });\r\n    return true;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const loadNewWord = (data, token) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/loadNextWord', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    dispatch({ type: EXP_A_LOAD_WORD, payload: res.data.word });\r\n    return true;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const initRound = (data, token) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/initRound', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    dispatch({ type: EXP_A_LOAD_ROUND, payload: res.data });\r\n    return true;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const addToWordList = (data) => dispatch => new Promise((resolve, reject) => {\r\n  //Añade la palabra al cache\r\n  dispatch({ type: EXP_A_ADD_WORD_LIST, payload: data});\r\n  //Añade un contador al numero de palabras de la ronda\r\n  dispatch({ type: EXP_A_ADD_ROUND_WORD_COUNT, payload: {}});\r\n  resolve();\r\n});\r\n\r\nexport const sendWordList = (data, token) => async (dispatch) => {\r\n  try{\r\n    if(data.wordList.length === 0){\r\n      return true;\r\n    }\r\n    await axios.post('/api/addWordToRelation', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    //dispatch({ type: EXP_A_CLEAR_WORD_LIST, payload: {} });\r\n    //Limpia las ultimas 5 palabras en cache\r\n    dispatch({ type: EXP_A_REDUCE_WORD_LIST, payload: {reduceIn: 5} });\r\n    return true;\r\n  }catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const endRound = (data, token) => async (dispatch) => {\r\n  try{\r\n    await axios.post('/api/endRound', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    dispatch({ type: EXP_A_ADD_ROUND_READY, payload: {} });\r\n    return true;\r\n  }catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const addRoundWordCount = () => dispatch => new Promise((resolve, reject) => {\r\n  dispatch({ type: EXP_A_ADD_ROUND_WORD_COUNT, payload: {}});\r\n  resolve();\r\n});\r\n\r\nexport const sendPauseEvent = (data, token) => async (dispatch) => {\r\n  try{\r\n    await axios.post('/api/addPause', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    return true;\r\n  }catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const editWordInCache = (data) => dispatch => new Promise((resolve, reject) => {\r\n  dispatch({ type: EXP_A_EDIT_WORD_IN_CACHE, payload: data});\r\n  resolve();\r\n});\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  EXP_B_LOAD_TEST,\r\n  EXP_B_EXTREMES_WORDS,\r\n  EXP_B_OUTOFWORDS,\r\n} from './types';\r\n\r\n//La data que tengo que enviar es el token, la id del experimento de donde quiero que venga la data (ej 1111)\r\nexport const loadUserTestBeta = (data, token) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/loadUserTestBeta', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    dispatch({ type: EXP_B_LOAD_TEST, payload: { testId: res.data._id } });\r\n    return true;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n};\r\n\r\n//Carga las palabras para preguntar\r\nexport const loadExpBetaWords = (data, token) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/loadExpBetaWords', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    dispatch({ type: EXP_B_EXTREMES_WORDS, payload: { extremesWords: res.data } });\r\n    return true;\r\n  } catch (err) {\r\n    if(err.response.data.err === \"outOfWords\"){\r\n      dispatch({ type: EXP_B_OUTOFWORDS, payload: {} });\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const sendRelationWords = (data, token) => async (dispatch) => {\r\n  try {\r\n    await axios.post('/api/saveWordsRelations', data, { headers: { authorization: \"Bearer \" +  token }});\r\n    const res = await axios.post(\r\n      '/api/loadExpBetaWords',\r\n      {\r\n        alphaExpSource: data.alphaExpSource,\r\n        roomBetaNumber: data.roomBetaNumber\r\n      },\r\n      {headers: { authorization: \"Bearer \" +  token }}\r\n     );\r\n    dispatch({ type: EXP_B_EXTREMES_WORDS, payload: { extremesWords: res.data } });\r\n    return true;\r\n  } catch (err) {\r\n    if(err.response.data.err === \"outOfWords\"){\r\n      dispatch({ type: EXP_B_OUTOFWORDS, payload: {} });\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\nimport * as actions from '../actions';\r\nimport Modal from 'react-responsive-modal';\r\n\r\n//TODO: Se podria manejar la info de las forms con los states de la clase\r\n//TODO: realizar despliegue y analisis de campos con un for y array\r\n//TODO: Modularizar\r\n//TODO: Agregar capcha\r\n//TODO: Icono para cerra select o moverlo\r\n\r\nclass NewAccountModal extends Component {\r\n\r\n  state = {\r\n    nameInputClassName: 'validate',\r\n    surnameInputClassName: 'validate',\r\n    newRutInputClassName: 'validate',\r\n    mailInputClassName: 'validate',\r\n    ageInputClassName: 'validate',\r\n    newPasswordInputClassName: 'validate',\r\n    newPasswordVerInputClassName: 'validate',\r\n    surnameSignatureInputClassName: 'validate',\r\n    step: 1,\r\n    showProgressBar: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeSelect();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  \tthis.initializeSelect();\r\n  }\r\n\r\n  initializeSelect() {\r\n    $('#select').material_select();\r\n  }\r\n\r\n  onCloseModal(){\r\n    this.props.modalControl({modalId: 'newAccount', state: false});\r\n    this.setState({\r\n      nameInputClassName: 'validate',\r\n      surnameInputClassName: 'validate',\r\n      newRutInputClassName: 'validate',\r\n      mailInputClassName: 'validate',\r\n      ageInputClassName: 'validate',\r\n      newPasswordInputClassName: 'validate',\r\n      newPasswordVerInputClassName: 'validate',\r\n      surnameSignatureInputClassName: 'validate',\r\n      step: 1,\r\n      showProgressBar: false,\r\n    });\r\n    this.props.formClear({formId: 'newAccount'});\r\n  }\r\n\r\n  onChangeInput(inputId){\r\n    this.props.formInput({formId:'newAccount', inputId:inputId, text: $('#'+inputId).val()})\r\n  }\r\n\r\n  onChangeRadioButton(radioButtonId){\r\n    this.props.formInput({formId:'newAccount', inputId:'gender', text: $('#'+radioButtonId).val()})\r\n  }\r\n\r\n  validateExistenceAndLength(formData, errStateVarName, maxLength, minLength){\r\n    var trimedFormData = formData.trim();\r\n    if(trimedFormData === '' || trimedFormData.length > maxLength || trimedFormData.length <= minLength || (/\\s/.test(trimedFormData)) ){\r\n      this.setState({[errStateVarName]: 'invalid'});\r\n      this.props.formError({formId:'newAccount', err:'Faltan algunos de tus datos'});\r\n      return false;\r\n    }else{\r\n      this.setState({[errStateVarName]: 'valid'});\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateRadioButton(){\r\n    if(this.props.formData.gender === ''){\r\n      this.props.formError({formId:'newAccount', err:'Tienes que seleccionar tu genero'});\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  readSaveAndValidateSelect(){\r\n    var options = $('#select')[0].selectedOptions\r\n    var selected = [];\r\n    if(options.length > 0){\r\n      for(var i=0; i < options.length; i++){\r\n        if(options[i].value !== 'default'){\r\n          selected.push(options[i].value);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(selected.length === 0){\r\n      this.props.formError({formId:'newAccount', err:'Tienes que seleccionar tus intereses'});\r\n      return false;\r\n    }else{\r\n      this.props.formInput({formId:'newAccount', inputId:'interest', text: selected});\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateEmail(email) {\r\n    var emailTrimed = email.trim();\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailTrimed)){\r\n      return true;\r\n    }\r\n    this.setState({mailInputClassName: 'invalid'});\r\n    return false;\r\n  }\r\n\r\n  validateRut(rut){\r\n    var rutTrimed = rut.trim();\r\n    var valor = rutTrimed.replace(/\\./g,'');\r\n    valor = valor.replace('-','');\r\n    var cuerpo = valor.slice(0,-1);\r\n    var dv = valor.slice(-1).toUpperCase();\r\n    rutTrimed = cuerpo + '-'+ dv\r\n    if(cuerpo.length < 7) {\r\n      this.props.formError({formId:'newAccount', err:'Rut no valido'});\r\n      this.setState({newRutInputClassName: 'invalid'});\r\n      return false;\r\n    }\r\n    var suma = 0;\r\n    var multiplo = 2;\r\n    for(var i=1;i<=cuerpo.length;i++) {\r\n        var index = multiplo * valor.charAt(cuerpo.length - i);\r\n        suma = suma + index;\r\n        if(multiplo < 7) { multiplo = multiplo + 1; } else { multiplo = 2; }\r\n    }\r\n    var dvEsperado = 11 - (suma % 11);\r\n    dv = (dv == 'K')?10:dv;\r\n    dv = (dv == 0)?11:dv;\r\n    if(dvEsperado != dv) {\r\n      this.props.formError({formId:'newAccount', err:'Rut no valido'});\r\n      this.setState({newRutInputClassName: 'invalid'});\r\n      return false;\r\n    }\r\n    this.setState({newRutInputClassName: 'valid'});\r\n    return true;\r\n  }\r\n\r\n  //No se verifica complejidad de clave\r\n  validatePassword(password, passwordVer, maxLength, minLength){\r\n    var errorInValidateExistenceAndLength = false;\r\n    var passwordTrimed = password.trim();\r\n    if(passwordTrimed === '' || passwordTrimed.length >= maxLength || passwordTrimed.length <= minLength || (/\\s/.test(passwordTrimed)) ){\r\n      this.setState({newPasswordInputClassName: 'invalid'});\r\n      errorInValidateExistenceAndLength = true;\r\n    }\r\n    var passwordVerTrimed = passwordVer.trim();\r\n    if(passwordVerTrimed === '' || passwordVerTrimed.length >= maxLength || passwordVerTrimed.length <= minLength || (/\\s/.test(passwordVerTrimed)) ){\r\n      this.setState({newPasswordVerInputClassName: 'invalid'});\r\n      errorInValidateExistenceAndLength = true;\r\n    }\r\n    if(!errorInValidateExistenceAndLength){\r\n      if(passwordTrimed !== passwordVerTrimed){\r\n        this.props.formError({formId:'newAccount', err:'Las contraseñas estan mal verificadas'});\r\n        this.setState({newPasswordInputClassName: 'invalid'});\r\n        this.setState({newPasswordVerInputClassName: 'invalid'});\r\n        return false;\r\n      }\r\n      this.setState({newPasswordInputClassName: 'valid'});\r\n      this.setState({newPasswordVerInputClassName: 'valid'});\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  validateAgeRange(age, min, max){\r\n    if(age > min && age < max){\r\n      this.setState({ageInputClassName: 'valid'});\r\n      return true;\r\n    }\r\n    this.setState({ageInputClassName: 'invalid'});\r\n    return false;\r\n  }\r\n\r\n  onClickNext(){\r\n\r\n    var allOK = true;\r\n    allOK = this.readSaveAndValidateSelect() && allOK ? true : false;\r\n    allOK = this.validateRadioButton() && allOK ? true : false;\r\n    allOK = this.validateExistenceAndLength(this.props.formData.name, 'nameInputClassName' , 32, 2) && allOK ? true : false;\r\n    allOK = this.validateExistenceAndLength(this.props.formData.surname, 'surnameInputClassName' , 32, 2) && allOK ? true : false;\r\n    allOK = this.validateExistenceAndLength(this.props.formData.age, 'ageInputClassName' , 32, 1) && allOK ? true : false;\r\n    allOK = this.validateAgeRange(this.props.formData.age, 5, 105) && allOK ? true : false;\r\n    allOK = this.validateRut(this.props.formData.newRut) && allOK ? true : false;\r\n    allOK = this.validateExistenceAndLength(this.props.formData.mail, 'mailInputClassName' , 32, 5) && allOK ? true : false;\r\n    allOK = this.validateEmail(this.props.formData.mail) && allOK ? true : false;\r\n    allOK = this.validatePassword(this.props.formData.newPassword, this.props.formData.newPasswordVer, 32, 4) && allOK ? true : false;\r\n\r\n    //dejar en minusca nombre y apeelido al enviar\r\n    //quitar espacios al inicio y final en nombre, apellido, mail, rut, password y edad al enviar\r\n    if(allOK){\r\n      this.props.formError({formId:'newAccount', err:''});\r\n      this.setState({step: 2});\r\n    }\r\n  }\r\n\r\n  renderErr(){\r\n    if(this.props.formData.err !== ''){\r\n      return (\r\n        <div className='row noMargin center-align red'>\r\n          {this.props.formData.err}\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <div/>\r\n      );\r\n    }\r\n  }\r\n\r\n  validateSignatue(signature, surname){\r\n    var signatureTrimed = signature.trim();\r\n    signatureTrimed = signatureTrimed.toLowerCase();\r\n    var surnameTrimed = surname.trim();\r\n    surnameTrimed = surnameTrimed.toLowerCase();\r\n    if(signatureTrimed === surnameTrimed){\r\n      this.props.formError({formId:'newAccount', err:''});\r\n      this.setState({surnameSignatureInputClassName: 'valid'});\r\n      return true;\r\n    }\r\n    this.props.formError({formId:'newAccount', err:'Esta mal firmado'});\r\n    this.setState({surnameSignatureInputClassName: 'invalid'});\r\n    return false;\r\n  }\r\n\r\n\r\n  async processNewUser(){\r\n    if(this.validateSignatue(this.props.formData.surnameSignature, this.props.formData.surname)){\r\n      this.setState({showProgressBar: true});\r\n      var res = await this.props.createNewUser(this.props.formData);\r\n      this.setState({showProgressBar: false});\r\n      if(res){\r\n        this.props.formError({formId:'login', err:'Tu cuenta ya esta creada'});\r\n        this.onCloseModal();\r\n      }else{\r\n        this.props.formError({formId:'newAccount', err:'Error, puede ser que ya tengas una cuenta. Intenta otra vez'});\r\n      }\r\n    }\r\n  }\r\n\r\n  renderProsgressBar(){\r\n    if(this.state.showProgressBar){\r\n      return(\r\n        <div className=\"progress s6 offset-s3\" style={{marginTop: '14px'}}>\r\n          <div className=\"indeterminate\"></div>\r\n        </div>\r\n      );\r\n    }else{\r\n      return(\r\n        <div className=\"row noMargin\" style={{marginTop: '24px'}}>\r\n          <div className='col s6 center-align'>\r\n            <a onClick={() => this.onCloseModal()} className=\"waves-effect btn-flat blue-grey lighten-2\">Cancelar</a>\r\n          </div>\r\n          <div className='col s6 center-align'>\r\n            <a onClick={() => this.processNewUser()} className=\"waves-effect btn light-green darken-4\">Acepto las condiciones</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderContent(){\r\n    if(this.state.step === 1){\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col s6\">\r\n              <div className=\"input-field\">\r\n                <input value={this.props.formData.name} onChange={() => this.onChangeInput('name')} id=\"name\" type=\"text\" className={this.state.nameInputClassName}/>\r\n                <label htmlFor=\"name\">¿Cual es tu nombre?</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col s6\">\r\n              <div className=\"input-field\">\r\n                <input value={this.props.formData.surname} onChange={() => this.onChangeInput('surname')} id=\"surname\" type=\"text\" className={this.state.surnameInputClassName}/>\r\n                <label htmlFor=\"surname\">¿Cual es tu apellido?</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col s6\">\r\n              <div className=\"input-field\">\r\n                <input value={this.props.formData.age} onChange={() => this.onChangeInput('age')} id=\"age\" type=\"number\" className={this.state.ageInputClassName}/>\r\n                <label htmlFor=\"age\">¿Cual es tu Edad?</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col s6\">\r\n\r\n              <p>\r\n                <input name='group1' value='male' type='radio' id='radioGender1' onChange={()=> this.onChangeRadioButton('radioGender1')}/>\r\n                <label htmlFor='radioGender1' style={{marginRight: '25px'}}>Hombre</label>\r\n                <input name='group1' value='female' type='radio' id='radioGender2' onChange={()=> this.onChangeRadioButton('radioGender2')}/>\r\n                <label htmlFor='radioGender2'>Mujer</label>\r\n              </p>\r\n\r\n            </div>\r\n\r\n            <div className=\"col s12\">\r\n              <div className=\"input-field\">\r\n                <input value={this.props.formData.newRut} onChange={() => this.onChangeInput('newRut')} id=\"newRut\" type=\"text\" className={this.state.newRutInputClassName}/>\r\n                <label htmlFor=\"newRut\">¿Cual es tu Rut?</label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"input-field col s6\">\r\n              <select id='select' defaultValue={this.props.formData.interest.length === 0 ? [\"default\"] : this.props.formData.interest} multiple>\r\n                <option value=\"default\" disabled>Puedes elegir mas de una !</option>\r\n                <option value=\"quimica_fisica\">Química y Física</option>\r\n                <option value=\"negocios_administracion\">Negocios y Administración</option>\r\n                <option value=\"informatica\">Informática</option>\r\n                <option value=\"educacion\">Educación</option>\r\n                <option value=\"ingenieria\">Ingeniería</option>\r\n                <option value=\"medio_ambiente\">Medio ambiente</option>\r\n                <option value=\"historia_geografia\">Historia y Geografía</option>\r\n                <option value=\"leyes\">Leyes</option>\r\n                <option value=\"literatura\">Literatura</option>\r\n                <option value=\"medicina\">Medicina</option>\r\n                <option value=\"filosofia\">Filosofía</option>\r\n                <option value=\"estudios_religiosos\">Estudios religiosos</option>\r\n                <option value=\"estadisticas\">Estadísticas</option>\r\n                <option value=\"agricultura\">Agricultura</option>\r\n                <option value=\"humanidades_artes\">Humanidades y Artes</option>\r\n                <option value=\"ciencias_sociales\">Ciencias sociales</option>\r\n                <option value=\"arquitectura_diseño\">Arquitectura y Diseño</option>\r\n                <option value=\"psicologia\">Psicologia</option>\r\n              </select>\r\n              <label>¿Cuales son tu areas de interés?</label>\r\n            </div>\r\n            <div className=\"col s6\">\r\n              <div className=\"input-field\">\r\n                <input value={this.props.formData.mail} onChange={() => this.onChangeInput('mail')} id=\"mail\" type=\"text\" className={this.state.mailInputClassName}/>\r\n                <label htmlFor=\"mail\">¿Cual es tu Mail?</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col s12\">\r\n              <div className=\"input-field\">\r\n                <input value={this.props.formData.newPassword} onChange={() => this.onChangeInput('newPassword')} id=\"newPassword\" type=\"password\" className={this.state.newPasswordInputClassName}/>\r\n                <label htmlFor=\"newPassword\">Crea tu contraseña</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col s12\">\r\n              <div className=\"input-field\">\r\n                <input value={this.props.formData.newPasswordVer} onChange={() => this.onChangeInput('newPasswordVer')} id=\"newPasswordVer\" type=\"password\" className={this.state.newPasswordVerInputClassName}/>\r\n                <label htmlFor=\"newPasswordVer\">Repite tu contraseña</label>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {this.renderErr()}\r\n\r\n          <div className=\"divider row noMargin\"/>\r\n\r\n          <div className=\"row noMargin\" style={{marginTop: '24px'}}>\r\n            <div className='col s6 center-align'>\r\n              <a onClick={() => this.onCloseModal()} className=\"waves-effect btn-flat blue-grey lighten-2\">Cancelar</a>\r\n            </div>\r\n            <div className='col s6 center-align'>\r\n              <a onClick={() => this.onClickNext()} className=\"waves-effect btn light-green darken-4\">Siguiente</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else if(this.state.step === 2){\r\n      return (\r\n        <div>\r\n          <div className=\"row noMargin\">\r\n\r\n            <div className=\"col s12 flow-text\">\r\n              <p><b>Consentimiento Informado</b></p>\r\n              <p>Este experimento se enmarca en el proyecto de investigación “Creatividad y Redes Semánticas” a cargo de la Dra. Alejandra Beghelli de la Universidad Adolfo Ibañez y el Dr. Pablo Prieto de la Universidad Técnica Federico Santa María.</p>\r\n              <p>En este proyecto investigamos acerca de las características de las redes de asociaciones libres de las personas y su relación con la creatividad y la conexión de conceptos.</p>\r\n              <p>No hay riesgos asociados a su participación en este experimento.  La información personal (nombre, rut, edad y sexo entre otros) será empleada exclusivamente para fines científicos, resguardando su privacidad y confidencialidad. </p>\r\n              <p><b>Al escribir su apellido al final del consentimiento Ud. da permiso  al equipo de investigación para analizar los datos que se recolecten durante el experimento.</b> Toda la información producida en esta investigación será tratada de manera confidencial. </p>\r\n              <p>Usted tiene la libertad de retirarse del experimento cuando lo desee. </p>\r\n              <p>Para obtener mayor información sobre este estudio, puede contactarse con los investigadores: Alejandra Beghelli, <b>(56-32) 250-3824, alejandra.beghelli@uai.cl</b> o Pablo Prieto, <b>(56-32) 2654-923, pablo.prieto@usm.cl. </b></p>\r\n            </div>\r\n\r\n            <div className=\"col s12\">\r\n              <div className=\"input-field\">\r\n                <input value={this.props.formData.surnameSignature} placeholder=\"Escribe tu apellido para firmar las condiciones\" onChange={() => this.onChangeInput('surnameSignature')} id=\"surnameSignature\" type=\"text\" className={this.state.surnameSignatureInputClassName}/>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          {this.renderErr()}\r\n\r\n          <div className=\"divider row noMargin\"/>\r\n\r\n          {this.renderProsgressBar()}\r\n\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <div/>\r\n      );\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    return(\r\n      <div>\r\n        <Modal\r\n          open={this.props.modalState}\r\n          showCloseIcon={false}\r\n          closeOnOverlayClick={false}\r\n          closeOnEsc={false}\r\n          onClose={() => this.onCloseModal()}\r\n        >\r\n          <div className=\"row noMargin\">\r\n            <h5>Necesitamos algunos de tus datos</h5>\r\n          </div>\r\n\r\n          {this.renderContent()}\r\n\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    modalState: state.application.modals.newAccount,\r\n    formData: state.forms.newAccount,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(NewAccountModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\nimport * as actions from '../actions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport NewAccountModal from './NewAccountModal';\r\n\r\n//TODO: Se podria manejar las form con states de la clase\r\n//TODO: Modularizar\r\n\r\nclass Login extends Component {\r\n\r\n  state = {\r\n    rutInputClassName: 'validate',\r\n    passwordInputClassName: 'validate',\r\n    showProgressBar: false,\r\n  }\r\n\r\n  onChangeInput(inputId){\r\n    this.props.formInput({formId:'login', inputId:inputId, text: $('#'+inputId).val()})\r\n  }\r\n\r\n  formatAndValidateRut(rut){\r\n    var rutTrimed = rut.trim();\r\n    var valor = rutTrimed.replace(/\\./g,'');\r\n    valor = valor.replace('-','');\r\n    var cuerpo = valor.slice(0,-1);\r\n    var dv = valor.slice(-1).toUpperCase();\r\n    rutTrimed = cuerpo + '-'+ dv\r\n    if(cuerpo.length < 7) {\r\n      this.props.formError({formId:'login', err:'Rut no valido'});\r\n      this.setState({rutInputClassName: 'invalid'});\r\n      return 0;\r\n    }\r\n    var suma = 0;\r\n    var multiplo = 2;\r\n    for(var i=1;i<=cuerpo.length;i++) {\r\n        var index = multiplo * valor.charAt(cuerpo.length - i);\r\n        suma = suma + index;\r\n        if(multiplo < 7) { multiplo = multiplo + 1; } else { multiplo = 2; }\r\n    }\r\n    var dvEsperado = 11 - (suma % 11);\r\n    dv = (dv == 'K')?10:dv;\r\n    dv = (dv == 0)?11:dv;\r\n    if(dvEsperado != dv) {\r\n      this.props.formError({formId:'login', err:'Rut no valido'});\r\n      this.setState({rutInputClassName: 'invalid'});\r\n      return 0;\r\n    }\r\n    return rutTrimed;\r\n  }\r\n\r\n  async onClickLogin(){\r\n    var allOK = true;\r\n    allOK = this.validateExistenceAndLength(this.props.formData.rut, 'rutInputClassName' , 32, 3) && allOK ? true : false;\r\n    const rut = this.formatAndValidateRut(this.props.formData.rut); //Return 0 -> invalid Rut //Return formated Rut --> valid Rut\r\n    allOK = this.validateExistenceAndLength(this.props.formData.password, 'passwordInputClassName' , 32, 3)&& allOK ? true : false;\r\n    if(allOK && rut !== 0){\r\n      var res;\r\n      this.setState({rutInputClassName: 'valid'});\r\n      this.props.formError({formId:'login', err:''});\r\n      const credentials = {rut: rut.trim(), password:this.props.formData.password.trim()};\r\n      this.setState({showProgressBar: true});\r\n      res = await this.props.loginUser(credentials);\r\n      if(!res){\r\n        this.setState({showProgressBar: false});\r\n        this.setState({rutInputClassName: 'invalid'});\r\n        this.setState({passwordInputClassName: 'invalid'});\r\n      }\r\n    }\r\n  }\r\n\r\n  validateExistenceAndLength(formData, errStateVarName, maxLength, minLength){\r\n    var trimedFormData = formData.trim();\r\n    if(trimedFormData === '' || trimedFormData.length > maxLength || trimedFormData.length <= minLength || (/\\s/.test(trimedFormData)) ){\r\n      this.setState({[errStateVarName]: 'invalid'});\r\n      return false;\r\n    }else{\r\n      this.setState({[errStateVarName]: 'valid'});\r\n      return true;\r\n    }\r\n  }\r\n\r\n  renderProsgressBar(){\r\n    if(this.state.showProgressBar){\r\n      return (\r\n        <div className=\"progress s6 offset-s3\" style={{marginTop: '14px'}}>\r\n          <div className=\"indeterminate\"></div>\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <div className=\"row noMargin\" style={{marginTop: '24px'}}>\r\n          <div className='col s6 center-align'>\r\n            <a\r\n              onClick={() => {\r\n                this.props.formClear({formId: 'login'});\r\n                this.props.modalControl({modalId: 'newAccount', state: true})\r\n              }}\r\n              className=\"waves-effect btn-flat blue-grey lighten-2\">\r\n              Crear cuenta\r\n            </a>\r\n          </div>\r\n          <div className='col s6 center-align'>\r\n            <a onClick={() => this.onClickLogin()} className=\"waves-effect btn light-green darken-4\">Entrar</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderErr(){\r\n    if(this.props.formData.err !== ''){\r\n      return (\r\n        <div className='row noMargin center-align'>\r\n          {this.props.formData.err}\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <div/>\r\n      );\r\n    }\r\n  }\r\n\r\n  handleKeyPress(input){\r\n    if(input.key==='Enter'){\r\n      this.onClickLogin();\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    if(this.props.application.userLogIn){\r\n      return <Redirect to='/portal' />\r\n    }\r\n\r\n    return(\r\n      <div>\r\n\r\n        <NewAccountModal />\r\n\r\n        <div className='row'>\r\n          <div className='col s6 offset-s3 center-align flow-text'>\r\n            <p style={{fontSize: \"3rem\"}} >Creativity UAI</p>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col s10 l6 offset-s1 offset-l3'>\r\n            <div className=\"card\" style={{backgroundColor: \"#f7f7f7\"}}>\r\n              <div className=\"card-content\">\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    autoFocus\r\n                    value={this.props.formData.rut}\r\n                    onKeyPress={(key) => this.handleKeyPress(key)}\r\n                    onChange={() => this.onChangeInput('rut')}\r\n                    placeholder=\"12345678-9\"\r\n                    id=\"rut\"\r\n                    type=\"text\"\r\n                    className={this.state.rutInputClassName}\r\n                    ref={(input) => { this.rutInput = input; }}\r\n                  />\r\n                  <label htmlFor=\"rut\">Rut</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                  <input value={this.props.formData.password} onKeyPress={(key) => this.handleKeyPress(key)} onChange={() => this.onChangeInput('password')} id=\"password\" type=\"password\" className={this.state.passwordInputClassName}/>\r\n                  <label htmlFor=\"password\">Contraseña</label>\r\n                </div>\r\n\r\n                {this.renderErr()}\r\n\r\n                <div className=\"divider row noMargin\"/>\r\n\r\n                {this.renderProsgressBar()}\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    formData: state.forms.login,\r\n    userData: state.user,\r\n    application: state.application,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(Login);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\nimport * as actions from '../actions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n//TODO: No se ocupan cookies asi que la web no recuerda si esta conectado el usuario\r\n\r\nclass Portal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //PARA MANEJAR POSIBLES setState luego que el componente no esta montado. Provocado por peticiones asyncronas\r\n    this._isMounted = false;\r\n  }\r\n\r\n  state = {\r\n    roomInputClassName: 'validate',\r\n    showProgressBar: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._isMounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  onChangeInput(inputId){\r\n    this.props.formInput({formId:'roomSelector', inputId:inputId, text: $('#'+inputId).val()})\r\n  }\r\n\r\n  async onClickEnterRoom(){\r\n    if(this.props.formData.room === ''){\r\n      this.setState({roomInputClassName: 'invalid'});\r\n    }else{\r\n      var res;\r\n      this.setState({roomInputClassName: 'valid'});\r\n      this.setState({showProgressBar: true});\r\n      res = await this.props.roomSelect({room: this.props.formData.room}, this.props.user.token);\r\n      if(!res && this._isMounted){\r\n        this.setState({showProgressBar: false});\r\n        this.setState({roomInputClassName: 'invalid'});\r\n        //TODO: Agregar texto de error\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  renderProsgressBar(){\r\n    if(this.state.showProgressBar){\r\n      return (\r\n        <div className=\"progress s6 offset-s3\" style={{marginTop: '14px'}}>\r\n          <div className=\"indeterminate\"></div>\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <div className=\"row noMargin\" style={{marginTop: '24px'}}>\r\n          <div className='col s12 center-align'>\r\n            <a onClick={() => this.onClickEnterRoom()} className=\"waves-effect btn light-green darken-4\">Entrar a la sala</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  handleKeyPress(input){\r\n    if(input.key==='Enter'){\r\n      this.onClickEnterRoom();\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    if(!this.props.application.userLogIn){\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    if(this.props.application.expPublicId !== 0){\r\n      if(this.props.application.expPublicId === 1){\r\n        //Carga el experimento alpha\r\n        return <Redirect to='/portal/alpha' />\r\n      }\r\n      if(this.props.application.expPublicId === 2){\r\n        //Carga el experimento beta\r\n        return <Redirect to='/portal/beta' />\r\n      }\r\n    }\r\n\r\n    return(\r\n        <div className='row' style={{marginTop: '30px'}}>\r\n          <div className='col s10 l6 offset-s1 offset-l3'>\r\n            <div className=\"card\" style={{backgroundColor: \"#f7f7f7\"}}>\r\n              <div className=\"card-content\">\r\n\r\n                <span className=\"card-title\">Escribe el numero de tu sala</span>\r\n\r\n                <div className=\"input-field\">\r\n                  <input\r\n                    autoFocus\r\n                    value={this.props.formData.room}\r\n                    onKeyPress={(key) => this.handleKeyPress(key)}\r\n                    onChange={() => this.onChangeInput('room')}\r\n                    id=\"room\"\r\n                    type=\"number\"\r\n                    className={this.state.roomInputClassName}\r\n                    ref={(input) => { this.roomInput = input; }}\r\n                  />\r\n                  <label htmlFor=\"room\">Sala</label>\r\n                </div>\r\n\r\n                <div className=\"divider row noMargin\"/>\r\n\r\n                {this.renderProsgressBar()}\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    formData: state.forms.roomSelector,\r\n    application: state.application,\r\n    user: state.user\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(Portal);\r\n","import React, { Component } from 'react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nclass HelpModal extends Component {\r\n\r\n  static defaultProps = {\r\n    isOpen: false,\r\n    instructionsText: 'default test', //TODO: NO se estan ocupando las instrucciones desde DB\r\n    loadingMode: false,\r\n    buttonText: 'salir',\r\n  };\r\n\r\n  state = {\r\n    page: 1,\r\n  }\r\n\r\n  onCloseModal(){\r\n    this.props.onCloseModal();\r\n  }\r\n\r\n  onClickNextButton(){\r\n    this.setState({page: this.state.page + 1});\r\n  }\r\n\r\n  renderProgressBar(){\r\n    return(\r\n      <div className=\"progress s6 offset-s3\" style={{marginTop: '14px'}}>\r\n        <div className=\"indeterminate\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  rederNextButton(){\r\n    return(\r\n      <div key={3} className='col s12 center-align'>\r\n        <a onClick={() => this.onClickNextButton()} className=\"waves-effect btn light-green darken-4\">Realizar experimento</a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  renderButton(){\r\n    return(\r\n      <div key={4} className='col s12 center-align'>\r\n        <a onClick={() => this.onCloseModal()} className=\"waves-effect btn light-green darken-4\">{this.props.buttonText}</a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderContent(page){\r\n    var content = [];\r\n    if(this.props.loadingMode){\r\n      return this.renderProgressBar();\r\n    }else{\r\n      if(page===1){\r\n        content.push(\r\n          <div key={1} className=\"col s12 flow-text\">\r\n            <p><b>¿En qué consiste este experimento?</b></p>\r\n            <p>Este experimento consiste en recolectar todas las <b>asociaciones libres</b> que se le ocurran al leer una determinada palabra.</p>\r\n            <p>Una asociación libre es cualquier concepto o idea que se le venga a la cabeza espontáneamente al leer la palabra. Por ejemplo, las asociaciones libres de la palabra PASTO son <b>todas las respuestas que se le ocurren a la pregunta</b> ¿Qué ideas se te vienen al cabeza con la palabra PASTO?</p>\r\n            <p>Ejemplo: Tus asociaciones libres de la palabra PASTO podrían ser: JARDÍN, VERDE, CAMPO…. Y muchas más claro !</p>\r\n            <p>Dependiendo de la palabra, a uno se le pueden ocurrir pocas o muchas asociaciones libres. El objetivo en este experimento es que <b>escriba todas las asociaciones libres</b> que espontáneamente se le ocurran, sin límite de tiempo.</p>\r\n          </div>\r\n        );\r\n        content.push(this.rederNextButton());\r\n      }\r\n      if(page===2){\r\n        content.push(\r\n          <div key={2} className=\"col s12 flow-text\">\r\n            <p><b>¿Cómo uso el sistema?</b></p>\r\n            <p>A continuación el sistema le mostrará una palabra y una casilla para escribir. En esa casilla escriba por favor su primera asociación libre y luego presione la telca \"ENTER\" de su teclado. Al presionar la tecla \"ENTER\", su asociación libre será guardada y aparecerá la casilla vacía para que ingrese la siguiente asociación. </p>\r\n            <p>Cuando ya no se le ocurran más asociaciones libres, presione el botón \"ESTOY SIN IDEAS\" y luego en \"PRÓXIMA PALABRA\" para pasar a la siguiente palabra.</p>\r\n            <p>Cuando ya se encuentre cansad@ de ingresar asociaciones y desee terminar la sesión de hoy, por favor presione \"ESTOY SIN IDEAS\" y luego \"TERMINAR POR AHORA\"</p>\r\n            <p>Muchas gracias por su participación en este experimento</p>\r\n          </div>\r\n        );\r\n        content.push(this.renderButton());\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {content}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <Modal\r\n        open={this.props.isOpen}\r\n        showCloseIcon={false}\r\n        closeOnOverlayClick={false}\r\n        closeOnEsc={false}\r\n        onClose={() => this.onCloseModal()}\r\n        onExited={() => this.setState({page: 1})}\r\n      >\r\n        <div className=\"row noMargin\">\r\n          {this.renderContent(this.state.page)}\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HelpModal;\r\n","import React, { Component } from 'react';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nclass EndRoundModal extends Component {\r\n\r\n  static defaultProps = {\r\n    isOpen: false,\r\n    showNextRoundButton: false,\r\n    showEndExpButton: false\r\n  };\r\n\r\n  onCloseModal(option){\r\n    this.props.onCloseModal(option);\r\n  }\r\n\r\n  renderContent(){\r\n    var content = [];\r\n    if(this.props.showNextRoundButton){\r\n      content.push(\r\n        <div key={1} className=\"col s6\">\r\n          <a onClick={() => this.onCloseModal('nextRound')} className=\"waves-effect btn light-green darken-4\">Próxima palabra</a>\r\n        </div>\r\n      );\r\n      if(this.props.showEndExpButton){\r\n        content.push(\r\n          <div key={2} className=\"col s6\">\r\n            <a onClick={() => this.onCloseModal('endExp')} className=\"waves-effect btn red darken-4\">Terminar por ahora</a>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    if(content.length > 0){\r\n      return(\r\n        <div className=\"col s12 center-align noMargin\">\r\n          {content}\r\n        </div>\r\n      );\r\n    }\r\n    return(\r\n      <div className=\"preloader-wrapper big active\">\r\n        <div className=\"spinner-layer spinner-blue-only\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div><div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Modal\r\n        open={this.props.isOpen}\r\n        showCloseIcon={false}\r\n        closeOnOverlayClick={false}\r\n        closeOnEsc={false}\r\n        onClose={() => this.onCloseModal()}\r\n      >\r\n        <div className=\"row center-align noMargin\" style={{whith: '800px'}}>\r\n          {this.renderContent()}\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n};\r\n\r\nexport default EndRoundModal;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\nimport * as actions from '../../actions'; //TODO: Encapsular\r\n\r\nclass wordViewer extends Component {\r\n\r\n  fixWordInput = React.createRef();\r\n\r\n  state = {\r\n    word: this.props.word,\r\n    editMode: false,\r\n    wordTime: this.props.wordTime,\r\n  }\r\n\r\n  //Se ejecuta cuando se cambian las propiedades del objeto\r\n  //Si se cambian las propiedades por el que instancio, se resetea todo\r\n  componentWillReceiveProps(newProps){\r\n     this.setState({\r\n       word: newProps.word,\r\n       editMode: false,\r\n       wordTime: newProps.wordTime,\r\n     });\r\n  }\r\n\r\n  //Se ejecuta luago de cada render\r\n  componentDidUpdate() {\r\n    //Si el componente esta montado\r\n    if(this.fixWordInput.current !== null){\r\n      //focus por referencia\r\n      this.fixWordInput.current.focus();\r\n    }\r\n  };\r\n\r\n  onClickCorrect(){\r\n    this.setState({editMode: true});\r\n  }\r\n\r\n  async onClickEnd(){\r\n    this.setState({editMode: false});\r\n    await this.props.editWordInCache({\r\n      word: this.state.word,\r\n      time: this.state.wordTime, //enviamos el tiempo en que la palabra es dicto para poder buscarla en el cache y editar\r\n    });\r\n  }\r\n\r\n  onChangeInput(){\r\n    this.setState({\r\n      word: this.fixWordInput.current.value\r\n    });\r\n  }\r\n\r\n  renderButton(){\r\n    if(!this.state.editMode){\r\n      return (\r\n        <a onClick={() => this.onClickCorrect()} className=\"waves-effect btn pink lighten-3\">Corregir</a>\r\n      );\r\n    }else {\r\n      return (\r\n        <a onClick={() => this.onClickEnd()} className=\"waves-effect btn green\">Terminar</a>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderWord(){\r\n    if(!this.state.editMode){\r\n      return (\r\n        <div style={{marginTop: '12px', fontWeight: 'bold'}}>\r\n          {this.state.word}\r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <div className=\"input-field\" style={{marginTop: '0px'}}>\r\n          <input\r\n            style={{marginBottom: '0px'}}\r\n            onChange={() => this.onChangeInput()}\r\n            value={this.state.word}\r\n            id=\"fixWordInput\"\r\n            type=\"text\"\r\n            ref={this.fixWordInput}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className='row noMargin' style={{paddingTop: '3px'}}>\r\n        <div className='col s6 right-align'>\r\n          {this.renderWord()}\r\n        </div>\r\n        <div className='col s6 left-align' style={{marginTop: '5px'}}>\r\n          {this.renderButton()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(wordViewer);\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions'; //TODO: Encapsular\r\n\r\nimport WordViewer from './wordViewer';\r\n\r\nclass CacheWordViewer extends Component {\r\n\r\n  // Muestra las ultimas 3 palabras (ojo que no puede mostrar mas de 5)\r\n  renderWords(){\r\n    return _.map(this.props.expAlpha.wordInputList.slice(this.props.expAlpha.wordInputList.length - 3 < 0 ? 0 : this.props.expAlpha.wordInputList.length - 3).reverse(), (wordObj, index) => {\r\n      return (\r\n        <WordViewer\r\n          key = {index}\r\n          wordTime = {wordObj.time}\r\n          word = {wordObj.word}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"row\">\r\n        <div className=\"col s8 offset-s2\">\r\n          <div className=\"card\" style={{backgroundColor: \"#f7f7f7\"}}>\r\n            <div className=\"card-content\">\r\n              <div className=\"row\">\r\n                Lo ultimo que escribiste:\r\n              </div>\r\n              <div className=\"row noMargin\">\r\n                {this.renderWords()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    expAlpha: state.expAlpha,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(CacheWordViewer);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\nimport * as actions from '../../actions'; //TODO: Encapsular\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport HelpModal from './HelpModal';              //Modal de ayuda (ocupado como modal inicial)\r\nimport EndRoundModal from './EndRoundModal';      //Modal de transicion entre rondas\r\nimport CacheWordViewer from './CacheWordViewer';  //Componente para ver ultimas palabras y poder editarlas\r\n\r\n//TODO: Añadir tiempo maximo sin actividad antes de un cierre\r\n//TODO: que pasa si no se encuentran nuevas palabras al solicitar al dictionary?\r\n//TODO: Validar longird de input, que queden en minuscula y sin espacios ni al final ni al inicio\r\n//TODO: Quitar los acentos para homologar lo mas posible\r\n//TODO: Validar que no se puedan enviar peticiones en forma simultanea por sobre clicks\r\n\r\n//TODO: Quitar boton fantasma para pruebas\r\n\r\nclass ExpMain extends Component {\r\n\r\n  wordInput = React.createRef();\r\n\r\n  state = {\r\n    showHelpModal: false,                               //Controla si se muestra el modal de ayuda\r\n    loadingModeHelpModal: true,                         //Controla si se muestra una barra de carga en la ayuda\r\n    textButtonHelpModal: '',                            //Texto en el botton del modal de Ayuda\r\n    timeInitPause: null,                                //Tiempo en que se habre el menu de help\r\n    fristRound: true,                                   //Indica si la palabra que se despliega es de la primera ronda\r\n\r\n    showEndRoundModal: false,                     //Controla el modal para siguiente ronda\r\n    showNextRoundButtonEndRoundModal: false,     //Controla si hay que habilitar el boton para siguiente ronda\r\n    showEndExpButtonEndRoundModal: false,        //Muestra boton para finalizar experimento\r\n\r\n    errorOnTest: false,             //Identifica si hay un error en la carga del experimento\r\n    enterKeyLocked: false,          //Indica si se estan enviando palabras y hay que bloqear el input\r\n    nextWordButtonClass: 'waves-effect btn orange lighten-1 disabled',         //Clase del boton de proxima ronda\r\n\r\n    displayCacheWordViewer: true, //Despliega o no el correcto de palabras\r\n  }\r\n\r\n  componentWillMount() {\r\n     //console.info('ExpMain - componentWillMount');\r\n  }\r\n\r\n  componentDidMount(){\r\n    //console.info('ExpMain - componentDidMount');\r\n\r\n    //Comprobamos que el usuario este identificado\r\n    if(!this.props.application.userLogIn){\r\n      this.setState({\r\n        errorOnTest: true\r\n      });\r\n      return;\r\n    }\r\n    //Comprobamos que el usuario ha seleccionado un sala (experimento)\r\n    if(this.props.application.activeExpId === ''){\r\n      this.setState({\r\n        errorOnTest: true\r\n      });\r\n      return;\r\n    }\r\n    //Iniciamos la carga del experimento\r\n    this.initialLoad();\r\n  }\r\n\r\n  //Se ejecuta cuando las props cambian\r\n  //Aqui se pueden ejecutar cambios de state\r\n  componentWillReceiveProps(newProps) {\r\n      //console.info('ExpMain - componentWillReceiveProps');\r\n      //console.info(newProps);\r\n   }\r\n\r\n   //shouldComponentUpdate(newProps, newState) {\r\n    //  console.info('ExpMain - shouldComponentUpdate');\r\n   //}\r\n\r\n   //Se ejecuta antes del render\r\n   componentWillUpdate(nextProps, nextState) {\r\n      //console.info('ExpMain - componentWillUpdate');\r\n      //console.info('nextProps: ');\r\n      //console.info(nextProps);\r\n      //console.info('nextState: ');\r\n      //console.info(nextState);\r\n   }\r\n\r\n   //Se ejecuta luego del render\r\n   componentDidUpdate(prevProps, prevState) {\r\n      if(prevProps.expAlpha.roundId !== this.props.expAlpha.roundId){ //Si se incio una nueva ronda\r\n        this.wordInput.current.focus();\r\n      }\r\n   }\r\n\r\n   //Se ejcuta cuando el componente se desmonta\r\n   componentWillUnmount() {\r\n      //console.info('ExpMain - componentWillUnmount');\r\n   }\r\n\r\n  //Incia el experimento\r\n  async initialLoad(){\r\n    //Despliega las intrucciones iniciales del experimento\r\n    this.setState({\r\n      showHelpModal: true,\r\n      loadingModeHelpModal: true,\r\n      textButtonHelpModal: 'Entiendo, quiero comenzar !',\r\n      fristRound: true\r\n    });\r\n    //Carga el test del usuario\r\n    const testLoaded = await this.props.loadUserTest({experimentId: this.props.application.activeExpId}, this.props.user.token);\r\n    if(!testLoaded){\r\n      this.setState({errorOnTest: true});\r\n      return;\r\n    }\r\n    //Carga la palabra inicial de la ronda\r\n    const wordLoaded = await this.props.loadNewWord({testId: this.props.expAlpha.testId}, this.props.user.token);\r\n    if(!wordLoaded){\r\n      this.setState({errorOnTest: true});\r\n      return;\r\n    }\r\n    //El modal deja de mostrar el cargador y muestra el boton para iniciar la prueba\r\n    this.setState({\r\n      loadingModeHelpModal: false\r\n    });\r\n    return;\r\n  }\r\n\r\n  //Cuando se cierra el modal de ayuda\r\n  async onCloseHelpModal(){\r\n    //En caso de ser el inicio del experimento\r\n    this.setState({showHelpModal: false});\r\n    if(this.state.fristRound){\r\n      this.initRound();\r\n      this.setState({fristRound: false});\r\n    }else{    //En caso de ser una pausa cualquiera\r\n      //Se marca el momento en que termina la pausa y se envia el registro\r\n      var timeEndPause = new Date();\r\n      const pauseSended = await this.props.sendPauseEvent({\r\n        testId: this.props.expAlpha.testId,\r\n        timeInit: this.state.timeInitPause.toISOString(),\r\n        timeEnd: timeEndPause.toISOString()},\r\n      this.props.user.token);\r\n      if(!pauseSended){\r\n        this.setState({errorOnTest: true});\r\n        return;\r\n      }\r\n    }\r\n    this.wordInput.current.focus();\r\n  }\r\n\r\n  //Inicia la ronda\r\n  async initRound(){\r\n    var time = new Date();\r\n    const initRound = await this.props.initRound({testId: this.props.expAlpha.testId, word: this.props.expAlpha.actualWord, time: time.toISOString() },this.props.user.token);\r\n    if(!initRound){\r\n      this.setState({errorOnTest: true});\r\n      return;\r\n    }\r\n  }\r\n\r\n  //Manejo de input\r\n  onChangeInput(inputId){\r\n    this.props.formInput({formId:'expA', inputId:inputId, text: $('#'+inputId).val()})\r\n  }\r\n\r\n  //Click de entrar palabra\r\n  async handleKeyPress(input){\r\n    if(input.key==='Enter' && !this.state.enterKeyLocked){\r\n      this.setState({enterKeyLocked: true});\r\n      var time = new Date();\r\n      //validar y deja en formato palabras\r\n      var specialChars = \"!@#$^&%*()+=-[]\\/{}|:<>?,.\";\r\n      var inputValidate = this.props.formData.mainInput.trim();\r\n      for (var i = 0; i < specialChars.length; i++) {\r\n        inputValidate = inputValidate.replace(new RegExp(\"\\\\\" + specialChars[i], 'gi'), '');\r\n      }\r\n      if(inputValidate === '' || inputValidate.length <= 1){\r\n        this.props.formClear({formId: 'expA'});\r\n        this.setState({enterKeyLocked: false});\r\n        this.wordInput.current.focus();\r\n        return;\r\n      }\r\n      inputValidate = inputValidate.toLowerCase();\r\n      inputValidate = inputValidate.replace(/á/gi,\"a\");\r\n      inputValidate = inputValidate.replace(/é/gi,\"e\");\r\n      inputValidate = inputValidate.replace(/í/gi,\"i\");\r\n      inputValidate = inputValidate.replace(/ó/gi,\"o\");\r\n      inputValidate = inputValidate.replace(/ú/gi,\"u\");\r\n\r\n      //Se añade la palabra al cache y Añade un contador al numero de palabras de la ronda\r\n      await this.props.addToWordList(\r\n        {word: inputValidate, time: time.toISOString()}\r\n      );\r\n      //Si la lista ya tiene 10 palabras, se envia el cache\r\n      if(this.props.expAlpha.wordInputList.length >= 10){ //TODO: Valor se puede pasar a parametro\r\n        //TODO: Probar otros metodos para que no se sienta el lag\r\n        //Selecciona las primeras 5 palabras del cache y las envia a la DB\r\n        var solicedWordList = this.props.expAlpha.wordInputList.slice(0,5);\r\n        const wordListSaved = await this.props.sendWordList({\r\n          wordList: solicedWordList,\r\n          roundId: this.props.expAlpha.roundId\r\n        },this.props.user.token);\r\n        if(!wordListSaved){\r\n          this.setState({errorOnTest: true});\r\n          return;\r\n        }\r\n        this.setState({enterKeyLocked: false});\r\n      }\r\n      //Muestra el boton para terminar la ronda si se han ingresado 3 palabras o mas esta ronda\r\n      if(this.props.expAlpha.wordOfRoundCount >= 2){ //TODO: Valor se puede pasar a parametro\r\n        this.setState({nextWordButtonClass: 'waves-effect btn orange lighten-1'});\r\n      }\r\n      this.props.formClear({formId: 'expA'});\r\n      this.setState({enterKeyLocked: false});\r\n      this.wordInput.current.focus();\r\n    }\r\n  }\r\n\r\n  //Click en proxima ronda\r\n  async onClickNextRound(){\r\n    //Si el usuario completo 2 rondas o mas se da la opcion que salga del experimento\r\n    if(this.props.expAlpha.roundsComplete >= 1){ //TODO: Valor se puede pasar a parametro\r\n      this.setState({\r\n        showEndExpButtonEndRoundModal: true\r\n      });\r\n    }\r\n    this.setState({\r\n      enterKeyLocked: true,\r\n      nextWordButtonClass: 'waves-effect btn orange lighten-1 disabled',\r\n      showEndRoundModal: true,\r\n      showNextRoundButtonEndRoundModal: false,\r\n    });\r\n    //Se envia el cache pendiente\r\n    const wordListSaved = await this.props.sendWordList({\r\n      wordList: this.props.expAlpha.wordInputList,\r\n      roundId: this.props.expAlpha.roundId\r\n    },this.props.user.token);\r\n    if(!wordListSaved){\r\n      this.setState({errorOnTest: true});\r\n      return;\r\n    }\r\n    //Se termina la ronda\r\n    const roundEnded = await this.props.endRound({\r\n      roundId: this.props.expAlpha.roundId,\r\n      mainWordId: this.props.expAlpha.wordId,\r\n      testId: this.props.expAlpha.testId\r\n    },this.props.user.token);\r\n    if(!roundEnded){\r\n      this.setState({errorOnTest: true});\r\n      return;\r\n    }\r\n    //Se carga la nueva palabra raiz\r\n    const wordLoaded = await this.props.loadNewWord({testId: this.props.expAlpha.testId}, this.props.user.token);\r\n    if(!wordLoaded){\r\n      this.setState({errorOnTest: true});\r\n      return;\r\n    }\r\n    this.setState({\r\n      showNextRoundButtonEndRoundModal: true,\r\n    });\r\n  }\r\n\r\n  //Cuando se cierra el modal de carga entre rondas\r\n  onCloseEndRoundModal(option){\r\n    switch(option) {\r\n      case 'nextRound':\r\n        this.initRound();\r\n        this.setState({\r\n          showEndRoundModal: false,\r\n          enterKeyLocked: false\r\n        });\r\n        break;\r\n      case 'endExp':\r\n        this.props.userLogOut();\r\n        this.setState({\r\n          endExp: true\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({errorOnTest: true});\r\n    }\r\n  }\r\n\r\n  //Cuando el se hace click para pedir ayuda\r\n  onClickHelpButton(){\r\n    var timeInitPause = new Date();\r\n    //Se habre el modal de ayuda y se marca el momento de esto\r\n    this.setState({\r\n      showHelpModal: true,\r\n      loadingModeHelpModal: false,\r\n      textButtonHelpModal: 'Estoy listo para continuar',\r\n      fristRound: false,\r\n      timeInitPause: timeInitPause,\r\n    });\r\n  }\r\n\r\n  checkboxCacheWordViewer(val){\r\n      this.setState({\r\n        displayCacheWordViewer: val,\r\n      });\r\n  }\r\n\r\n  //Dibuja la seccion donde se pueden corregir las palabras\r\n  renderCacheWordViewer(){\r\n    if(this.state.displayCacheWordViewer){\r\n      return (\r\n        <CacheWordViewer/>\r\n      );\r\n    }else{\r\n      return (\r\n        <div/>\r\n      );\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    //Redireccion en caso de error\r\n    if(this.state.errorOnTest || this.state.endExp){\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n      <div>\r\n\r\n        <HelpModal\r\n          onCloseModal={() => this.onCloseHelpModal()}\r\n          isOpen={this.state.showHelpModal}\r\n          instructionsText={this.props.expAlpha.parameters.instructions}\r\n          loadingMode={this.state.loadingModeHelpModal}\r\n          buttonText={this.state.textButtonHelpModal}\r\n        />\r\n\r\n        <EndRoundModal\r\n          showNextRoundButton={this.state.showNextRoundButtonEndRoundModal}\r\n          isOpen={this.state.showEndRoundModal}\r\n          onCloseModal={(option) => this.onCloseEndRoundModal(option)}\r\n          showEndExpButton={this.state.showEndExpButtonEndRoundModal}\r\n        />\r\n\r\n        <div className='row' style={{marginTop: '30px'}}>\r\n          <div className='col s12 center-align'>\r\n            ¿Que relacionas con la siguiente palabra ?\r\n            <h5>{this.props.expAlpha.actualWord}</h5>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col s10 l6 offset-s1 offset-l3 center-align'>\r\n            <div className=\"input-field\">\r\n              <input\r\n                disabled={this.state.enterKeyLocked}\r\n                ref={this.wordInput}\r\n                value={this.props.formData.mainInput}\r\n                onChange={() => this.onChangeInput('mainInput')}\r\n                id=\"mainInput\"\r\n                type=\"text\"\r\n                onKeyPress={(key) => this.handleKeyPress(key)}\r\n              />\r\n            </div>\r\n           Y click en \"Enter\" para enviar !\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col s12 l6 offset-l3 center-align'>\r\n            <div className='col s6 center-align'>\r\n              <a onClick={() => this.onClickNextRound()} className={this.state.nextWordButtonClass}>Pasar palabra</a>\r\n            </div>\r\n            <div className='col s6 center-align'>\r\n              <a onClick={() => this.onClickHelpButton()} className=\"waves-effect btn blue\">Ver instrucciones</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col s12 l6 offset-l3 center-align'>\r\n            <div className='col s12 center-align'>\r\n              <a onClick={() => this.onClickHelpButton()} className=\"waves-effect btn blue-grey\">Pausa</a>\r\n              <a style={{display: 'none'}} onClick={() => this.handleKeyPress({key: 'Enter'})} className=\"waves-effect btn blue-grey\">TEST</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {this.renderCacheWordViewer()}\r\n\r\n        <div className='row'>\r\n          <div className='col s12 l6 offset-l3 center-align'>\r\n            <div className=\"switch\">\r\n              <div>\r\n                Corrector\r\n              </div>\r\n              <label>\r\n                Apagado\r\n                <input\r\n                 defaultChecked\r\n                 type=\"checkbox\"\r\n                 onChange={(obj) => this.checkboxCacheWordViewer(obj.target.checked)}\r\n                />\r\n                <span className=\"lever\"></span>\r\n                Encendido\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    application: state.application,\r\n    expAlpha: state.expAlpha,\r\n    user: state.user,\r\n    formData: state.forms.expA,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(ExpMain);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../actions';\r\n\r\nclass WordsInterface extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //PARA MANEJAR POSIBLES setState luego que el componente no esta montado. Provocado por peticiones asyncronas\r\n    this._isMounted = false;\r\n  }\r\n\r\n  input = React.createRef();\r\n\r\n  state = {\r\n    input: '',\r\n    inputClassName: 'validate',\r\n    lockButton: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._isMounted = true;\r\n    this.input.current.focus();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  //Manejo de input\r\n  onChangeInput(inputId){\r\n    this.setState({\r\n      input: this[inputId].current.value\r\n    });\r\n  }\r\n\r\n  //Click en boton listo\r\n  async onClickReady(){\r\n    var relations = this.processString(\r\n      this.state.input,\r\n      this.props.expBeta.extremesWords[0].word,\r\n      this.props.expBeta.extremesWords[1].word\r\n    );\r\n    if(relations === -1){\r\n      this.setState({\r\n        inputClassName: 'invalid',\r\n      });\r\n    }else{\r\n      this.setState({\r\n        inputClassName: 'validate',\r\n        lockButton: true,\r\n      });\r\n\r\n      //HAY QUE DEJAR EN MINISCULA Y PROCESAR ACENTOS Y OTROS (ESPACIOSs)\r\n\r\n      const allOK = await this.props.sendRelationWords(\r\n        {\r\n          testId: this.props.expBeta.testId,\r\n          roomBetaNumber: this.props.forms.roomSelector.room,\r\n          alphaExpSource: this.props.expBeta.parameters.alphaExpIdSource,\r\n          relations\r\n        },\r\n        this.props.user.token\r\n      );\r\n      if(!allOK){\r\n        console.log(\"Error al enviar relaciones\");\r\n      }\r\n      if(this._isMounted){ //El componente se puede desmontar si es que el experimento termina\r\n        this.setState({\r\n          lockButton: false,\r\n          input: '',\r\n        });\r\n        this.input.current.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  //Procesador de string\r\n  processString(inputString,initWord,endWord){\r\n    var wordsArray = [];\r\n    var conectionArray = [];\r\n    var output = [];\r\n    var err = false;\r\n\r\n    //Elimina los espacios\r\n    inputString = inputString.replace(/ /g,\"\");\r\n    //Dejamos en minuscula\r\n    inputString = inputString.toLowerCase();\r\n    //Removemos acentos\r\n    inputString = inputString.replace(/á/gi,\"a\");\r\n    inputString = inputString.replace(/é/gi,\"e\");\r\n    inputString = inputString.replace(/í/gi,\"i\");\r\n    inputString = inputString.replace(/ó/gi,\"o\");\r\n    inputString = inputString.replace(/ú/gi,\"u\");\r\n\r\n    //Verifica que el primer y ultimo caracter sean simbolos de conexion\r\n    if(inputString[0] !== \"<\" && inputString[0] !== \">\" && inputString[0] !== \"=\") return -1\r\n    if(inputString[inputString.length - 1] !== \"<\" && inputString[inputString.length - 1] !== \">\" && inputString[inputString.length - 1] !== \"=\") return -1\r\n\r\n    wordsArray = inputString.split(/<|>|=/);\r\n    wordsArray = wordsArray.slice(1,wordsArray.length - 1);\r\n\r\n    //Verifica que no existan dos simbolos contiguos\r\n    for (var wordIndex = 0; wordIndex < wordsArray.length; wordIndex++){\r\n      if(wordsArray[wordIndex].length <= 1) return -1;\r\n    }\r\n\r\n    if(wordsArray.length === 0) return -1;\r\n\r\n    for (var charIndex = 0; charIndex < inputString.length; charIndex++) {\r\n      if(inputString.charAt(charIndex) === \"<\") conectionArray.push(\"<\");\r\n      if(inputString.charAt(charIndex) === \">\") conectionArray.push(\">\");\r\n      if(inputString.charAt(charIndex) === \"=\") conectionArray.push(\"=\");\r\n    }\r\n\r\n    createRelation(initWord, wordsArray[0], conectionArray[0]);\r\n    for(var wordIndex = 0; wordIndex < wordsArray.length - 1; wordIndex++){\r\n      createRelation(wordsArray[wordIndex], wordsArray[wordIndex+1], conectionArray[wordIndex+1]);\r\n    }\r\n    createRelation(wordsArray[wordsArray.length - 1], endWord, conectionArray[wordsArray.length]);\r\n\r\n    return output;\r\n\r\n    function createRelation(wordFrom, wordTo, relation){\r\n      output.push({wordFrom,wordTo,relation});\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className='row' style={{marginTop: '30px'}}>\r\n        <div className='col s4 center-align'>\r\n          <b style={{fontSize: 'xx-large'}}>{this.props.expBeta.extremesWords[0].word}</b>\r\n        </div>\r\n        <div className='col s4 center-align'>\r\n          <input\r\n            ref={this.input}\r\n            value={this.state.input}\r\n            onChange={() => this.onChangeInput('input')}\r\n            type=\"text\"\r\n            className={this.state.inputClassName}\r\n          />\r\n        </div>\r\n        <div className='col s4 center-align'>\r\n          <b style={{fontSize: 'xx-large'}}>{this.props.expBeta.extremesWords[1].word}</b>\r\n        </div>\r\n        <div className='col s12 center-align'>\r\n          <a\r\n           onClick={() => this.onClickReady()}\r\n           className=\"waves-effect btn blue-grey\"\r\n           disabled={this.state.lockButton}\r\n          >\r\n            Listo\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    expBeta: state.expBeta,\r\n    user: state.user,\r\n    expBeta: state.expBeta,\r\n    forms: state.forms,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(WordsInterface);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../actions'; //TODO: Encapsular\r\n\r\nimport WordsInterface from './WordsInterface';\r\n\r\nclass ExpMainBeta extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this._isMounted = false;\r\n  }\r\n\r\n  state = {\r\n    errorOnTest: false,             //Identifica si hay un error en la carga del experimento\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._isMounted = true;\r\n    //Comprobamos que el usuario este identificado\r\n    if(!this.props.application.userLogIn){\r\n      this.setState({\r\n        errorOnTest: true\r\n      });\r\n      return;\r\n    }\r\n    //Comprobamos que el usuario ha seleccionado un sala (experimento)\r\n    if(this.props.application.activeExpId === ''){\r\n      this.setState({\r\n        errorOnTest: true\r\n      });\r\n      return;\r\n    }\r\n    this.loadTest();\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n      //Cuando se termine de cargar el test pedimos cargar las palabras iniciales\r\n      if(newProps.expBeta.testId !== this.props.expBeta.testId){\r\n        this.loadWords(newProps);\r\n      }\r\n   }\r\n\r\n  //Incia el test\r\n  async loadTest(){\r\n    //Carga el test del usuario\r\n    const testLoaded = await this.props.loadUserTestBeta({\r\n      experimentId: this.props.application.activeExpId\r\n    }, this.props.user.token);\r\n    if(!testLoaded && this._isMounted){\r\n      this.setState({errorOnTest: true});\r\n      return;\r\n    }\r\n    return;\r\n  }\r\n\r\n  //Busca las palabras a preguntar\r\n  async loadWords(newProps){\r\n    await this.props.loadExpBetaWords({\r\n      alphaExpSource: this.props.expBeta.parameters.alphaExpIdSource,\r\n      roomBetaNumber: this.props.forms.roomSelector.room,\r\n    }, this.props.user.token);\r\n  }\r\n\r\n  render(){\r\n    //Redireccion en caso de error\r\n    if(this.state.errorOnTest){\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    //En caso que el server no encuentre mas palabras\r\n    if(this.props.expBeta.err === \"outofwords\"){\r\n      return(\r\n        <div className='row' style={{marginTop: '30px'}}>\r\n          <div className='col s8 offset-s1 flow-text center-align'>\r\n            <b>Fin del experimento</b>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    //Cuando esten cargadas las dos palabras que hay que unir\r\n    if(this.props.expBeta.extremesWords.length >= 2){\r\n\r\n      return(\r\n        <div>\r\n          <div className='row' style={{marginTop: '30px'}}>\r\n            <div className='col s8 offset-s1 flow-text'>\r\n              <p>En esta prueba tienes que relacionar las dos palabras en negrita que están en la parte inferior de la pantalla. </p>\r\n              <p>Las asociaciones libres las puedes realizar rellenando el formulario que este entre las dos palabras en negrita.</p>\r\n              <p><b>Las asociaciones entre las dos palabras son libres</b>, esto quiere decir que puedes ocupar cualquier palabra que se te venga a la mente. Puedes ocupar una o más palabras para relacionar las palabras en negrita. Las palabras llevan un símbolo entremedio para indicar la dirección de la relación. Estos pueden ser:</p>\r\n              <p> \"&#60;\" la relación va desde la palabra de la derecha a la izquierda</p>\r\n              <p> \"&#62;\" relación va desde la palabra de la izquierda a la derecha</p>\r\n              <p> \"&#61;\" la relación puede ir para ambos lados</p>\r\n              <p> Ejemplo: </p>\r\n              <p> <b>piano</b> &#62;teatro&#61; <b>ciudad</b></p>\r\n              <p> <b>perro</b> &#60;veterinario&#60;medicina&#61; <b>doctor</b></p>\r\n            </div>\r\n          </div>\r\n          <div className=\"divider\"></div>\r\n          <WordsInterface />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        Cargando\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    application: state.application,\r\n    user: state.user,\r\n    expBeta: state.expBeta,\r\n    forms: state.forms,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(ExpMainBeta);\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Login from './Login';\r\nimport Portal from './Portal';\r\nimport AlphaExpMain from './expAlpha/ExpMain';\r\nimport BetaExpMain from './expBeta/ExpMain';\r\n\r\nconst Main = () => {\r\n  return(\r\n    <BrowserRouter>\r\n      <div>\r\n        <Route exact={true} path=\"/\" component={Login} />\r\n        <Route exact={true} path=\"/portal\" component={Portal} />\r\n        <Route exact={true} path=\"/portal/alpha\" component={AlphaExpMain} />\r\n        <Route exact={true} path=\"/portal/beta\" component={BetaExpMain} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import 'materialize-css/dist/js/materialize.min.js'\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport './css/customCss.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\nimport Main from './components/Main';\r\n\r\n//TODO: quitar loger de redux dev tools para production\r\nconst store = createStore(reducers, {},\r\n  compose(\r\n    applyMiddleware(reduxThunk),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f\r\n    )\r\n  );\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <Main />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}